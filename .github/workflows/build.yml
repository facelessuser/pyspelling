name: build

on:
  push:
    branches:
      - 'master'
    tags:
    - '**'
  pull_request:
    branches:
    - '**'

jobs:
  tests:
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest] #, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
        include:
          - python-version: 3.6
            tox-env: py36
            continue-on-error: False
          - python-version: 3.7
            tox-env: py37
            continue-on-error: False
          - python-version: 3.8
            tox-env: py38
            continue-on-error: False
          - python-version: 3.9
            tox-env: py39
            continue-on-error: True
        # exclude:
        #   - platform: windows-latest
        #     python-version: 3.9

    env:
      TOXENV: ${{ matrix.tox-env }}

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      if: "!endsWith(matrix.python-version, '-dev')"
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up development Python ${{ matrix.python-version }}
      if: endsWith(matrix.python-version, '-dev')
      uses: deadsnakes/action@v1.0.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Python (Install Dependencies)
      run: |
        python -m pip install --upgrade pip setuptools tox coverage codecov

    # # Windows
    # - name: Windows (Setup MSYS2)
    #   if: runner.os == 'Windows'
    #   uses: numworks/setup-msys2@v1
    #   with:
    #     msystem: MSYS
    # - name: Windows (Setup MSYS2 Dependencies)
    #   if: runner.os == 'Windows'
    #   run: msys2do pacman -S --noconfirm mingw-w64-x86_64-aspell mingw-w64-x86_64-aspell-en mingw-w64-x86_64-hunspell mingw-w64-x86_64-hunspell-en
    # - name: Windows (Setup Aspell Config)
    #   if: runner.os == 'Windows'
    #   shell: bash
    #   run: |
    #     spellpath=$(echo "${RUNNER_TEMP}/msys/msys64/mingw64/bin" | sed 's/\\/\//g');
    #     aconf=$(${spellpath}/aspell config conf-dir | sed 's/\\/\//g');
    #     ${spellpath}/aspell dump config | sed 's/\\\\/\//g' > ${aconf}/aspell.conf;
    #     temp=$(${spellpath}/aspell config data-dir | sed 's/\\/\//g');
    #     echo "data-dir ${temp}" >> ${aconf}/aspell.conf;
    #     temp=$(${spellpath}/aspell config dict-dir | sed 's/\\/\//g');
    #     echo "dict-dir ${temp}" >> ${aconf}/aspell.conf
    # - name: Windows (Run Tests)
    #   if: runner.os == 'Windows'
    #   env:
    #     TOX_SPELL_PATH: '${{ runner.temp }}\msys\msys64\mingw64\bin'
    #     TOX_SPELL_REQUIRE: both
    #   run: |
    #     python -m tox

    # Linux
    - name: Linux (Setup Dependencies)
      if: runner.os == 'Linux'
      run: sudo apt-get install aspell aspell-en hunspell hunspell-en-us
    - name: Linux (Run Tests)
      if: runner.os == 'Linux'
      env:
        TOX_SPELL_REQUIRE: both
      run: |
        python -m tox
      continue-on-error: ${{ matrix.continue-on-error }}

    # Results
    - name: Upload Results
      if: success()
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: ${{ matrix.platform }}-${{ matrix.tox-env }}
        fail_ci_if_error: false

  lint:
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]

    env:
      TOXENV: lint

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools tox
    - name: Lint
      run: |
        python -m tox

  documents:
    env:
      TOXENV: documents

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools tox
    - name: Install Aspell
      run: |
        sudo apt-get install aspell aspell-en
    - name: Build documents
      run: |
        python -m tox
